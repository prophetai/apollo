env:
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_HOST: localhost
  db_name: postgres
name: tests

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7.9' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)
  
    - name: Google Cloud Platform (GCP) CLI - gcloud
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: |
          info
          gsutil -m cp 'gs://forex_models/models/gb*'  assets/models_1h/
          gsutil -m cp -r 'gs://forex_models/models/variables'  assets/models_1h/
          gsutil -m cp -r 'gs://forex_models/models_4h'  assets/
    - name: Install htmltopdf
      run: |
        wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.bionic_amd64.deb && \
        sudo apt-get -y install xfonts-75dpi && \
        sudo apt-get -y install xfonts-base && \
        sudo dpkg -i wkhtmltox_0.12.6-1.bionic_amd64.deb && \
        sudo apt-get install -f
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run code
      env:
        email_from: prophetsfai@gmail.com
        email_pass: ${{ secrets.prophets_email_pass}}
        email_members: deds15@gmail.com
        token: ${{ secrets.oanda_test_token}}
        trading_url: ${{ secrets.oanda_test_url}}
        telegram_token: ${{ secrets.telegram_test_token}}
        telegram_chat_id: ${{ secrets.telegram_test_chat_id}}
        json_google_account: ${{ secrets.json_google_account}}
        token_demo: ${{ secrets.oanda_test_token}}
        trading_url_1h: ${{ secrets.oanda_test_url}}
        PGPASSWORD: postgres
        initial_pip: 6
        pip_limit: 20000
      run: |
        psql -h localhost -U postgres -f trading.sql
        cd apollo/
        python src/main.py -o -s --model-version=models_4h --instrument=USD_JPY --account=1h